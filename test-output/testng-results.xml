<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="9" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-12-28T11:59:15 IST" name="Suite" finished-at="2023-12-28T12:08:17 IST" duration-ms="542306">
    <groups>
      <group name="regression">
        <method signature="ProjectTest.deleteProject()[pri:3, instance:Test.ProjectTest@71075444]" name="deleteProject" class="Test.ProjectTest"/>
        <method signature="ProjectTest.editproject()[pri:2, instance:Test.ProjectTest@71075444]" name="editproject" class="Test.ProjectTest"/>
      </group> <!-- regression -->
      <group name="smoke">
        <method signature="ProjectTest.addProject()[pri:1, instance:Test.ProjectTest@71075444]" name="addProject" class="Test.ProjectTest"/>
        <method signature="ProjectTest.deleteProject()[pri:3, instance:Test.ProjectTest@71075444]" name="deleteProject" class="Test.ProjectTest"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2023-12-28T11:59:15 IST" name="Test" finished-at="2023-12-28T12:08:17 IST" duration-ms="542306">
      <class name="Test.InvoiceTest">
        <test-method is-config="true" signature="beforeTest(java.lang.String)[pri:0, instance:Test.InvoiceTest@4d1bf319]" started-at="2023-12-28T12:07:05 IST" name="beforeTest" finished-at="2023-12-28T12:07:09 IST" duration-ms="4137" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="verifyinvoice()[pri:1, instance:Test.InvoiceTest@4d1bf319]" started-at="2023-12-28T12:07:09 IST" name="verifyinvoice" finished-at="2023-12-28T12:07:16 IST" duration-ms="6861" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyinvoice -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:Test.InvoiceTest@4d1bf319]" started-at="2023-12-28T12:07:16 IST" name="takeScreenShotOnFailure" finished-at="2023-12-28T12:07:16 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyinvoice status=SUCCESS method=InvoiceTest.verifyinvoice()[pri:1, instance:Test.InvoiceTest@4d1bf319] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
        <test-method is-config="true" signature="beforeTest(java.lang.String)[pri:0, instance:Test.InvoiceTest@4d1bf319]" started-at="2023-12-28T12:07:16 IST" name="beforeTest" finished-at="2023-12-28T12:07:25 IST" duration-ms="8707" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="verifydeleteinvoice()[pri:2, instance:Test.InvoiceTest@4d1bf319]" started-at="2023-12-28T12:07:25 IST" name="verifydeleteinvoice" finished-at="2023-12-28T12:08:17 IST" duration-ms="52750" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifydeleteinvoice -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:Test.InvoiceTest@4d1bf319]" started-at="2023-12-28T12:08:17 IST" name="takeScreenShotOnFailure" finished-at="2023-12-28T12:08:17 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifydeleteinvoice status=SUCCESS method=InvoiceTest.verifydeleteinvoice()[pri:2, instance:Test.InvoiceTest@4d1bf319] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
      </class> <!-- Test.InvoiceTest -->
      <class name="Test.ProjectTest">
        <test-method is-config="true" signature="beforeTest(java.lang.String)[pri:0, instance:Test.ProjectTest@71075444]" started-at="2023-12-28T12:02:36 IST" name="beforeTest" finished-at="2023-12-28T12:02:49 IST" duration-ms="12232" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="addProject()[pri:1, instance:Test.ProjectTest@71075444]" started-at="2023-12-28T12:02:49 IST" name="addProject" finished-at="2023-12-28T12:02:58 IST" duration-ms="9325" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addProject -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:Test.ProjectTest@71075444]" started-at="2023-12-28T12:02:58 IST" name="takeScreenShotOnFailure" finished-at="2023-12-28T12:02:58 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addProject status=SUCCESS method=ProjectTest.addProject()[pri:1, instance:Test.ProjectTest@71075444] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
        <test-method is-config="true" signature="beforeTest(java.lang.String)[pri:0, instance:Test.ProjectTest@71075444]" started-at="2023-12-28T12:02:58 IST" name="beforeTest" finished-at="2023-12-28T12:03:05 IST" duration-ms="7453" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="editproject()[pri:2, instance:Test.ProjectTest@71075444]" started-at="2023-12-28T12:03:05 IST" name="editproject" finished-at="2023-12-28T12:06:17 IST" duration-ms="192012" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[java.util.concurrent.TimeoutException
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [5c2140824c8c9619925441cf802ddbc9, clickElement {id=4B328A31CF50FEDC8003631AFEC5660E_element_11}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 120.0.6099.130, chrome: {chromedriverVersion: 120.0.6099.109 (3419140ab66..., userDataDir: C:\Users\CHAITRA\AppData\Lo...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:58444}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:58444/devtoo..., se:cdpVersion: 120.0.6099.130, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (5c2140824c8c9619925441cf802ddbc9)] -> xpath: //span[text()='All Projects']]
Session ID: 5c2140824c8c9619925441cf802ddbc9]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: java.util.concurrent.TimeoutException
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [5c2140824c8c9619925441cf802ddbc9, clickElement {id=4B328A31CF50FEDC8003631AFEC5660E_element_11}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 120.0.6099.130, chrome: {chromedriverVersion: 120.0.6099.109 (3419140ab66..., userDataDir: C:\Users\CHAITRA\AppData\Lo...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:58444}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:58444/devtoo..., se:cdpVersion: 120.0.6099.130, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (5c2140824c8c9619925441cf802ddbc9)] -> xpath: //span[text()='All Projects']]
Session ID: 5c2140824c8c9619925441cf802ddbc9
at org.openqa.selenium.remote.http.netty.NettyHttpHandler.makeCall(NettyHttpHandler.java:65)
at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42)
at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:55)
at org.openqa.selenium.remote.http.netty.NettyHttpHandler.execute(NettyHttpHandler.java:48)
at org.openqa.selenium.remote.http.netty.NettyClient.execute(NettyClient.java:96)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:188)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:224)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy20.click(Unknown Source)
at Page.ProjectPage.clickProjectLink(ProjectPage.java:84)
at Test.ProjectTest.editproject(ProjectTest.java:31)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.util.concurrent.TimeoutException
at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
at org.asynchttpclient.netty.NettyResponseFuture.get(NettyResponseFuture.java:206)
at org.openqa.selenium.remote.http.netty.NettyHttpHandler.makeCall(NettyHttpHandler.java:59)
... 45 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editproject -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:Test.ProjectTest@71075444]" started-at="2023-12-28T12:06:17 IST" name="takeScreenShotOnFailure" finished-at="2023-12-28T12:06:38 IST" duration-ms="20746" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=editproject status=FAILURE method=ProjectTest.editproject()[pri:2, instance:Test.ProjectTest@71075444] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
        <test-method is-config="true" signature="beforeTest(java.lang.String)[pri:0, instance:Test.ProjectTest@71075444]" started-at="2023-12-28T12:06:38 IST" name="beforeTest" finished-at="2023-12-28T12:06:57 IST" duration-ms="19006" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="deleteProject()[pri:3, instance:Test.ProjectTest@71075444]" started-at="2023-12-28T12:06:57 IST" name="deleteProject" finished-at="2023-12-28T12:07:05 IST" duration-ms="7827" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteProject -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:Test.ProjectTest@71075444]" started-at="2023-12-28T12:07:05 IST" name="takeScreenShotOnFailure" finished-at="2023-12-28T12:07:05 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=deleteProject status=SUCCESS method=ProjectTest.deleteProject()[pri:3, instance:Test.ProjectTest@71075444] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
      </class> <!-- Test.ProjectTest -->
      <class name="Test.NoteTest">
        <test-method is-config="true" signature="beforeTest(java.lang.String)[pri:0, instance:Test.NoteTest@65987993]" started-at="2023-12-28T11:59:29 IST" name="beforeTest" finished-at="2023-12-28T11:59:36 IST" duration-ms="6849" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="addNote()[pri:1, instance:Test.NoteTest@65987993]" started-at="2023-12-28T11:59:36 IST" name="addNote" finished-at="2023-12-28T11:59:44 IST" duration-ms="7897" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNote -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:Test.NoteTest@65987993]" started-at="2023-12-28T11:59:44 IST" name="takeScreenShotOnFailure" finished-at="2023-12-28T11:59:44 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addNote status=SUCCESS method=NoteTest.addNote()[pri:1, instance:Test.NoteTest@65987993] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
        <test-method is-config="true" signature="beforeTest(java.lang.String)[pri:0, instance:Test.NoteTest@65987993]" started-at="2023-12-28T11:59:44 IST" name="beforeTest" finished-at="2023-12-28T12:00:13 IST" duration-ms="28795" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="SearchNote()[pri:2, instance:Test.NoteTest@65987993]" started-at="2023-12-28T12:00:13 IST" name="SearchNote" finished-at="2023-12-28T12:00:31 IST" duration-ms="17604" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchNote -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:Test.NoteTest@65987993]" started-at="2023-12-28T12:00:31 IST" name="takeScreenShotOnFailure" finished-at="2023-12-28T12:00:31 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SearchNote status=SUCCESS method=NoteTest.SearchNote()[pri:2, instance:Test.NoteTest@65987993] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
        <test-method is-config="true" signature="beforeTest(java.lang.String)[pri:0, instance:Test.NoteTest@65987993]" started-at="2023-12-28T12:00:31 IST" name="beforeTest" finished-at="2023-12-28T12:01:12 IST" duration-ms="41441" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="EditNote()[pri:3, instance:Test.NoteTest@65987993]" started-at="2023-12-28T12:01:12 IST" name="EditNote" finished-at="2023-12-28T12:01:41 IST" duration-ms="28756" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EditNote -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:Test.NoteTest@65987993]" started-at="2023-12-28T12:01:41 IST" name="takeScreenShotOnFailure" finished-at="2023-12-28T12:01:41 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=EditNote status=SUCCESS method=NoteTest.EditNote()[pri:3, instance:Test.NoteTest@65987993] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
        <test-method is-config="true" signature="beforeTest(java.lang.String)[pri:0, instance:Test.NoteTest@65987993]" started-at="2023-12-28T12:01:41 IST" name="beforeTest" finished-at="2023-12-28T12:01:46 IST" duration-ms="5167" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="deleteNote()[pri:4, instance:Test.NoteTest@65987993]" started-at="2023-12-28T12:01:46 IST" name="deleteNote" finished-at="2023-12-28T12:02:36 IST" duration-ms="50378" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteNote -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:Test.NoteTest@65987993]" started-at="2023-12-28T12:02:36 IST" name="takeScreenShotOnFailure" finished-at="2023-12-28T12:02:36 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=deleteNote status=SUCCESS method=NoteTest.deleteNote()[pri:4, instance:Test.NoteTest@65987993] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
      </class> <!-- Test.NoteTest -->
      <class name="Test.LoginTest">
        <test-method is-config="true" signature="beforeTest(java.lang.String)[pri:0, instance:Test.LoginTest@31ea9581]" started-at="2023-12-28T11:59:16 IST" name="beforeTest" finished-at="2023-12-28T11:59:25 IST" duration-ms="9545" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="verifyLogin(java.lang.String,java.lang.String)[pri:1, instance:Test.LoginTest@31ea9581]" started-at="2023-12-28T11:59:25 IST" name="verifyLogin" data-provider="dp" finished-at="2023-12-28T11:59:29 IST" duration-ms="4156" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin@admin.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345678]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogin -->
        <test-method is-config="true" signature="takeScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:Test.LoginTest@31ea9581]" started-at="2023-12-28T11:59:29 IST" name="takeScreenShotOnFailure" finished-at="2023-12-28T11:59:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLogin status=SUCCESS method=LoginTest.verifyLogin(java.lang.String,java.lang.String)[pri:1, instance:Test.LoginTest@31ea9581] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFailure -->
      </class> <!-- Test.LoginTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
